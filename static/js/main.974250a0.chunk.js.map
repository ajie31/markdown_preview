{"version":3,"sources":["component/markDown.jsx","component/preview.jsx","App.js","index.js"],"names":["MarkDown","className","style","textAlign","height","outline","resize","id","type","value","this","props","onChange","onUpdate","Component","Preview","text","overflowY","overflowX","dangerouslySetInnerHTML","__html","marked","App","state","handleOnChange","event","input","target","setState","ReactDOM","render","document","getElementById"],"mappings":"8LA8BeA,E,uKAlBX,OACE,sBAAKC,UAAU,SAAf,UACE,oBAAIA,UAAU,YAAYC,MALV,CAClBC,UAAW,UAIT,oBAGA,0BACED,MAdgB,CACpBE,OAAQ,OACRC,QAAS,OACTC,OAAQ,QAYJL,UAAU,uCACVM,GAAG,SACHC,KAAK,OACLC,MAAOC,KAAKC,MAAMF,MAClBG,SAAUF,KAAKC,MAAME,kB,GArBRC,a,gBC4BRC,EA3BC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAYjB,OACE,sBAAKf,UAAU,SAAf,UACE,qBAAIA,UAAU,YAAYC,MALV,CAClBC,UAAW,UAIT,UACG,IADH,UAEU,OAEV,qBACED,MAfe,CACnBE,OAAQ,OACRa,UAAW,SACXC,UAAW,UAaPX,GAAG,UACHY,wBAnBG,CAAEC,OAAQC,IAAOL,UCuBbM,E,4MAvBbC,MAAQ,CACNP,KACE,mjC,EAGJQ,eAAiB,SAACC,GAChB,IAAMC,EAAQ,EAAKH,MACnBG,EAAMV,KAAOS,EAAME,OAAOlB,MAC1B,EAAKmB,SAAS,CACZF,W,uDAKF,OACE,sBAAKzB,UAAU,UAAf,UACE,cAAC,EAAD,CAAUQ,MAAOC,KAAKa,MAAMP,KAAMH,SAAUH,KAAKc,iBACjD,cAAC,EAAD,CAASR,KAAMN,KAAKa,MAAMP,c,GAlBhBF,aCAlBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.974250a0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass MarkDown extends Component {\r\n  render() {\r\n    const textAreaStyle = {\r\n      height: \"82vh\",\r\n      outline: \"none\",\r\n      resize: \"none\",\r\n    };\r\n    const headerStyle = {\r\n      textAlign: \"center\",\r\n    };\r\n    return (\r\n      <div className=\"col-sm\">\r\n        <h3 className=\"display-6\" style={headerStyle}>\r\n          Editor\r\n        </h3>\r\n        <textarea\r\n          style={textAreaStyle}\r\n          className=\".container container-xl form-control\"\r\n          id=\"editor\"\r\n          type=\"text\"\r\n          value={this.props.value}\r\n          onChange={this.props.onUpdate}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MarkDown;\r\n","import React, { Component } from \"react\";\r\nimport marked from \"marked\";\r\n\r\nconst Preview = ({ text }) => {\r\n  const createMarkDown = () => {\r\n    return { __html: marked(text) };\r\n  };\r\n  const previewStyle = {\r\n    height: \"82vh\",\r\n    overflowY: \"scroll\",\r\n    overflowX: \"hidden\",\r\n  };\r\n  const headerStyle = {\r\n    textAlign: \"center\",\r\n  };\r\n  return (\r\n    <div className=\"col-sm\">\r\n      <h3 className=\"display-6\" style={headerStyle}>\r\n        {\" \"}\r\n        Preview{\" \"}\r\n      </h3>\r\n      <div\r\n        style={previewStyle}\r\n        id=\"preview\"\r\n        dangerouslySetInnerHTML={createMarkDown()}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import React, { Component } from \"react\";\nimport MarkDown from \"./component/markDown\";\nimport Preview from \"./component/preview\";\n\nclass App extends Component {\n  state = {\n    text:\n      \"# Markdown Text goes here\\n## You can also make subheadings\\n\\n > One of the **trickiest** parts of getting this project to work was learning how to use `dangerouslySetInnerHTML` to make the previewer display the output of [marked.js](https://github.com/markedjs/marked/blob/master/README.md) as HTML instead of a string.<br><br> >According to the React Documentation,\\n> dangerouslySetInnerHTML is React’s replacement for using innerHTML in the browser DOM. In general, setting HTML from code is risky because it’s easy to inadvertently expose your users to a cross-site scripting (XSS) attack.\\n\\n ---\\n```\\n// CODE BLOCK SAMPLE\\nfunction createMarkup() {\\n  return {__html: 'First &middot; Second'};\\n}\\n\\nfunction MyComponent() {\\n  return <div dangerouslySetInnerHTML={createMarkup()} />;\\n}\\n```\\n\\n --- \\nJust remember to:\\n- Search, Read, Ask\\n- Ask for help on the Forum (that's what worked for me.)\\n\\n![Vipatron icon](https://bit.ly/fcc-running-cats 'Kitty walking')\\n\\n![Vipatron icon][picref]\\n\\n[picref]: https://bit.ly/fcc-relaxing-cat 'kitten'\\n\",\n  };\n\n  handleOnChange = (event) => {\n    const input = this.state;\n    input.text = event.target.value;\n    this.setState({\n      input,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"row p-3\">\n        <MarkDown value={this.state.text} onUpdate={this.handleOnChange} />\n        <Preview text={this.state.text} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}